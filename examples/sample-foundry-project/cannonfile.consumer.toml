name = "consumer-foundry"
version = "0.0.1"
description = "Simple project to verify the functionality of cannon"
keywords = ["sample", "consumer"]

[setting.change_greeting2]
defaultValue = "new greeting!"

[import.greeters]
source = "greeter-foundry"

[import.more_greeters]
source = "greeter-foundry"
options.salt = "second"
options.msg = "a message from second greeter set"

[invoke.change_greeting2]
target = ["greeters.greeter"]
func = "setGreeting"
args = ["<%= formatBytes32String(settings.change_greeting2) %>"]

# test for factory functionality
[invoke.clone]
target = ["greeters.greeter"]
func = "doCloning"

factory.cloned.event = "NewClonedGreeter"
factory.cloned.arg = 0
factory.cloned.artifact = "Greeter"

# test for multiple event emmission and extras functionality


# Change clone greeting lets use change greetings for greeter clones 
# At specified addresses
[invoke.change_clone_greeting]
target = ["greeters.greeter"]
func = "changeCloneGreeting"
args = ["<%= contracts.cloned.address %>", "<%= formatBytes32String('New Greeting!') %>"]

extra.NewCloneGreeting.event = "NewGreetingAdded"
extra.NewCloneGreeting.arg = 0
extra.NewCloneGreeting.artifact = "Greeter"

extra.OldCloneGreeting.event = "OldGreetingRemoved"
extra.OldCloneGreeting.arg = 0
extra.OldCloneGreeting.artifact = "Greeter"

# test to parse through previous emitted event values
[invoke.set_new_greeting_for_next_clones]
target = ["greeters.greeter"]
func = "setGreeting"
args = ["<%= extras.NewCloneGreeting %>"]

# Clone 2 greeters iteratively (used to test multiple emissions of the same event)
# Testing this using extras object instead of factory 
[invoke.clone_iterative]
target = ["greeters.greeter"]
func = "doCloningIteratively"
args = ["2"]

factory.clonedWithIter.event = "NewClonedGreeter"
factory.clonedWithIter.arg = 0
factory.clonedWithIter.artifact = "Greeter"
factory.clonedWithIter.expectCount = 2

extra.NewClonedGreeterEvent.event = "NewClonedGreeter"
extra.NewClonedGreeterEvent.arg = 0
extra.NewClonedGreeterEvent.expectCount = 2

# Change clone greeting enables changing greetings for greeter clones at specified addresses
[invoke.change_last_clone_greeting]
target = ["greeters.greeter"]
func = "changeCloneGreeting"
args = ["<%= extras.NewClonedGreeterEvent_1 %>", "<%= formatBytes32String('Newest Greeting!') %>"]
